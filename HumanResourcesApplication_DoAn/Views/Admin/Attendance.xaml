<UserControl x:Class="HumanResourcesApplication_DoAn.Views.Admin.Attendance"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HumanResourcesApplication_DoAn.Views.Admin"
             xmlns:viewModelAdmin="clr-namespace:HumanResourcesApplication_DoAn.ViewModel.Admin"
             mc:Ignorable="d" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             d:DesignHeight="750" d:DesignWidth="1100">
    <UserControl.DataContext>
        <viewModelAdmin:AttendanceViewModel/>
    </UserControl.DataContext>
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"></BooleanToVisibilityConverter>
        <Style TargetType="DataGrid">
            <Setter Property="VerticalScrollBarVisibility" Value="Disabled"></Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#222528"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="True"/>
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="Margin" Value="0 0 0 0" />
            <Setter Property="Grid.Row" Value="5" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="SelectionUnit" Value="FullRow" />
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="CanUserDeleteRows" Value="False" />
            <Setter Property="CanUserReorderColumns" Value="False" />
            <Setter Property="CanUserResizeRows" Value="False" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="GridLinesVisibility" Value="None" />
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="BorderBrush" Value="White"></Setter>
            <Setter Property="BorderThickness" Value="0,1,0,1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGrid">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10" BorderThickness="{TemplateBinding BorderThickness}"  SnapsToDevicePixels="True">

                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <Border Grid.Column="1" Grid.Row="0" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"/>
                                            </Border>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Column="0" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Background="{StaticResource Color3}">
        <StackPanel Orientation="Vertical">
            <Grid>
                <StackPanel Margin="0,0,0,0" Orientation="Horizontal">
                    <RadioButton Style="{StaticResource TopBorderTriggerButton}">
                        <TextBlock Text="All"></TextBlock>
                    </RadioButton>
                </StackPanel>
            </Grid>
            <!--PanelMain-->
            <Grid Margin="0,37.5,0,30" Background="{StaticResource Color3}">
                <StackPanel Orientation="Horizontal">
                    <StackPanel Margin="0,0,16,0">
                        <Border Background="White" Width="274" Height="90" BorderBrush="{StaticResource ButtonColor5}" BorderThickness="1.5" CornerRadius="10">
                            <StackPanel>
                                <TextBlock Panel.ZIndex="1" Margin="20,20,0,0" Text="Total Employee" FontSize="13" Foreground="{StaticResource FontColor2}"></TextBlock>
                                <TextBlock Panel.ZIndex="1" Margin="20,10,0,0" Text="{Binding TotalEmployee}" FontSize="20" FontWeight="Bold" Foreground="{StaticResource FontColor8}"></TextBlock>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                    <StackPanel Margin="0,0,16,0">
                        <Border Background="White" Width="274" Height="90" BorderBrush="{StaticResource ButtonColor5}" BorderThickness="1.5" CornerRadius="10">
                            <StackPanel>
                                <TextBlock Panel.ZIndex="1" Margin="20,20,0,0" Text="Attend" FontSize="13" Foreground="{StaticResource FontColor2}"></TextBlock>
                                <TextBlock Panel.ZIndex="1" Margin="20,10,0,0" Text="{Binding Attend}" FontSize="20" FontWeight="Bold" Foreground="{StaticResource FontColor8}"></TextBlock>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                    <StackPanel Margin="0,0,16,0">
                        <Border Background="White" Width="274" Height="90" BorderBrush="{StaticResource ButtonColor5}" BorderThickness="1.5" CornerRadius="10">
                            <StackPanel>
                                <TextBlock Panel.ZIndex="1" Margin="20,20,0,0" Text="Late Attend" FontSize="13" Foreground="{StaticResource FontColor2}"></TextBlock>
                                <TextBlock Panel.ZIndex="1" Margin="20,10,0,0" Text="{Binding LateAttend}" FontSize="20" FontWeight="Bold" Foreground="{StaticResource FontColor8}"></TextBlock>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                    <StackPanel Margin="0,0,0,0">
                        <Border Background="White" Width="274" Height="90" BorderBrush="{StaticResource ButtonColor5}" BorderThickness="1.5" CornerRadius="10">
                            <StackPanel>
                                <TextBlock Panel.ZIndex="1" Margin="20,20,0,0" Text="Absence" FontSize="13" Foreground="{StaticResource FontColor2}"></TextBlock>
                                <TextBlock Panel.ZIndex="1" Margin="20,10,0,0" Text="{Binding Absence}" FontSize="20" FontWeight="Bold" Foreground="{StaticResource FontColor8}"></TextBlock>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </StackPanel>
            </Grid>
            <!--Datagrid-->
            <Grid Height="480" Margin="0,0,0,0">
                <Border BorderBrush="{StaticResource ButtonColor5}" BorderThickness="0,1.5,0,1.5" CornerRadius="10">
                    <StackPanel Orientation="Vertical">
                        <Grid Height="50" Background="White">
                            <TextBlock Margin="15,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" Text="Employee List" FontSize="17" Foreground="{StaticResource FontColor8}" FontWeight="SemiBold" Background="White"></TextBlock>
                            <Grid HorizontalAlignment="Right" Width="300" Height="34" Margin="0,0,0,0">
                                <TextBlock Margin="15,5,5,5" Text="Search..." FontSize="13"
                                           Visibility="{Binding ElementName=Attendancetxtfilter, Path=Text.IsEmpty,Converter={StaticResource BoolToVis}}"
                                           HorizontalAlignment="Left" VerticalAlignment="Center" Panel.ZIndex="1" IsHitTestVisible="False">
                                </TextBlock>
                                <Border BorderBrush="LightGray" BorderThickness="1" CornerRadius="7">
                                    <TextBox x:Name="Attendancetxtfilter" Text="{Binding TextToFilter, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0" Width="274" Height="34" Padding="0,8,10,0"  VerticalAlignment="Center" FontSize="13"
                                            ></TextBox>
                                </Border>
                                <fa:FontAwesome Margin="0,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Right" Icon="Search" Foreground="black" FontSize="13"></fa:FontAwesome>
                            </Grid>

                        </Grid>

                        <DataGrid ItemsSource="{Binding Attendances}" Height="500" Name="Attendance_Users" RowStyle="{DynamicResource DataGridRowStyle1}" CellStyle="{DynamicResource DataGridCellTemplate}" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle2}">
                            <DataGrid.Columns>
                                <DataGridTextColumn CellStyle="{DynamicResource DataGridCellTemplate2}" Binding="{Binding userId}" IsReadOnly="True" CanUserResize="False" Width="150"></DataGridTextColumn>
                                <DataGridTextColumn Header="Date" Binding="{Binding date}" IsReadOnly="True" CanUserResize="False" Width="1*">
                                </DataGridTextColumn>
                                <DataGridTemplateColumn Header="In time" IsReadOnly="True" CanUserResize="False" Width="1*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding inTime}" Style="{StaticResource StatusTextBlock}">
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Out time" IsReadOnly="True" CanUserResize="False" Width="1*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding outTime}" Style="{StaticResource StatusTextBlock}">
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Hours" IsReadOnly="True" CanUserResize="False" Width="1*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding hours}" Style="{StaticResource StatusTextBlock}">
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Status" IsReadOnly="True" CanUserResize="False" Width="1*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding status}" FontWeight="SemiBold" Style="{StaticResource StatusTextBlock}">
                                            </TextBlock>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </Border>
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>
